{"version":3,"sources":["constants.js","components/GifCard/index.js","components/GifCard/GifCard.jsx","components/GifModalWindow/index.js","components/GifModalWindow/GifModalWindow.jsx","http/giphyRequest.js","components/Loader/index.js","components/Loader/Loader.jsx","components/GifContainer/index.js","components/GifContainer/GifContainer.jsx","components/Main/index.js","components/Main/Main.jsx","components/HeaderUI/HeaderUI.jsx","components/HeaderUI/index.js","components/App/index.js","components/App/App.jsx","index.js"],"names":["constants","APIKey","dataChunkSize","gifWidth","giphyDomain","googleApiKey","googleClientId","GifCard","width","height","data","id","className","style","src","images","preview_gif","url","alt","data-id","GifModalWindow","open","onClose","modalInfo","classes","makeStyles","card","maxWidth","outline","border","background","media","useStyles","Modal","aria-labelledby","aria-describedby","Card","CardActionArea","CardMedia","component","image","fixed_width_still","title","onClick","window","source","CardContent","Typography","gutterBottom","variant","color","rating","import_datetime","a","fetch","then","res","json","giphyRequest","Loader","props","GifContainer","state","searchData","isGettingData","toggleGettingData","setTimeout","setState","getData","request","maxCount","ratingValue","remainGifs","giphyOffset","chunkSize","Math","min","catch","err","console","log","extractData","handleClick","event","gifId","target","getAttribute","handleScroll","persist","searchRequest","slider","scrHeight","document","documentElement","clientHeight","scrollHeight","scrollTop","newData","handleModalClose","this","map","obj","isContentOver","onScroll","elementType","options","transitionDuration","disableImagesLoaded","updateOnEachImageLoad","imagesLoadedOptions","display","i","key","React","Component","Main","limits","Infinity","currencies","value","theme","grow","flexGrow","bar","menuButton","marginRight","spacing","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","fullList","flexWrap","textField","margin","borderColor","HeaderUI","handleMaxCountChange","handleRatingValueChange","handleQuerryChange","useState","top","toggleDrawer","type","AppBar","Toolbar","IconButton","edge","aria-label","SwipeableDrawer","anchor","onOpen","noValidate","autoComplete","TextField","select","label","onChange","SelectProps","MenuProps","menu","option","MenuItem","noWrap","InputBase","placeholder","root","input","inputProps","App","handleChange","e","timer","prop","clearTimeout","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4a323879.chunk.js","sourcesContent":["\r\nconst constants = {\r\n    APIKey: 'YVX8GiqO7VNjCvWf5q7EjeOlHxjd72cB',\r\n    dataChunkSize: 60,\r\n    gifWidth: 200,\r\n    giphyDomain: 'http://api.giphy.com/v1/gifs/search?q=',\r\n    googleApiKey: 'AIzaSyBLbn6bgiUWWw6If8qh73LHEMJjF3hnyBw',\r\n    googleClientId: '793758825150-cqbrem983f4spuhkubbebdcqiecujg5f.apps.googleusercontent.com',\r\n}\r\n\r\nexport default constants;","import GifCard from \"./GifCard\";\r\n\r\n\r\nexport default GifCard;","import React from 'react';\r\nimport constants from '../../constants';\r\nimport './gifCard.scss';\r\n\r\n\r\nexport default function GifCard({ data, id }) {\r\n\r\n  const culcHeight = (width, height) => {\r\n    const dif = constants.gifWidth / width;\r\n    return height * dif;\r\n\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"img-container\"\r\n      style={{\r\n        width: constants.gifWidth,\r\n        height: culcHeight(data.width, data.height)\r\n      }}\r\n    >\r\n      <img\r\n        src={data.images.preview_gif.url}\r\n        alt='some gif'\r\n        className=\"card-gif\"\r\n        data-id={id}\r\n        width={0}\r\n        height={0}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n","import GifModalWindow from \"./GifModalWindow\";\r\n\r\nexport default GifModalWindow;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './GifModalWindow.scss';\r\n\r\n\r\nexport default function GifModalWindow({ open, onClose, modalInfo }) {\r\n  const useStyles = makeStyles({\r\n    card: {\r\n      maxWidth: 500,\r\n      outline: 'none',\r\n      border: '3px solid #F9F0DA',\r\n      background: '#F9F0DA',\r\n    },\r\n    media: {\r\n      height: 200,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"modal-container\">\r\n      <Modal\r\n        className='modal'\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n        open={open}\r\n        onClose={onClose}\r\n      >\r\n        <Card className={classes.card}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              component=\"img\"\r\n              alt=\"Contemplative Reptile\"\r\n              image={modalInfo.images.fixed_width_still.url}\r\n              title=\"gif\"\r\n              onClick={() => {window.open(modalInfo.source)}}\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {modalInfo.title}\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"textPrimary\" component=\"span\">\r\n                Rating: {modalInfo.rating}\r\n                <br />\r\n                Import date: {modalInfo.import_datetime}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","\r\nasync function giphyRequest(url) {\r\n    return await fetch(url).then(res => res.json());\r\n}\r\n\r\n\r\nexport default giphyRequest;","import Loader from './Loader';\r\n\r\nexport default Loader;","import React from 'react';\r\nimport './Loader.scss';\r\n\r\n\r\nexport default function Loader(props) {\r\n    return (\r\n        <div className=\"load-bar\">\r\n            <div className=\"bar\"></div>\r\n            <div className=\"bar\"></div>\r\n            <div className=\"bar\"></div>\r\n        </div>\r\n    );\r\n}","import GifContainer from \"./GifContainer\";\r\n\r\nexport default GifContainer;","import React from 'react';\r\nimport GifCard from '../GifCard';\r\nimport GifModalWindow from '../GifModalWindow';\r\nimport NoMoreGifs from '../NoMoreGifs';\r\nimport giphyRequest from '../../http/giphyRequest';\r\nimport constants from '../../constants';\r\nimport key from 'weak-key';\r\nimport Masonry from 'react-masonry-component';\r\nimport Loader from '../Loader';\r\nimport './GifContainer.scss';\r\n\r\n\r\nexport default class GifContainer extends React.Component {\r\n\r\n  state = {\r\n    searchData: [],\r\n    modalInfo: null,\r\n    isGettingData: false,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.giphyOffset = 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { searchRequest } = this.props;\r\n\r\n    if (searchRequest) {\r\n      this.getData(searchRequest)\r\n        .then(data => this.setState({ searchData: data }));\r\n    }\r\n  }\r\n\r\n  toggleGettingData = () => {\r\n    const { isGettingData } = this.state;\r\n    if (isGettingData) {\r\n      setTimeout(() => {\r\n        this.setState({ isGettingData: !isGettingData })\r\n      }, 700);\r\n    } else {\r\n      this.setState({ isGettingData: !isGettingData });\r\n    }\r\n  }\r\n\r\n  getData = async (request) => {\r\n    const { isGettingData } = this.state;\r\n    const { maxCount, ratingValue } = this.props;\r\n\r\n    if (isGettingData) return;\r\n\r\n    const remainGifs = maxCount - this.giphyOffset;\r\n\r\n    const chunkSize = Math.min(constants.dataChunkSize, remainGifs);\r\n    const url = `${constants.giphyDomain}.${request}&api_key=${constants.APIKey}&limit=${chunkSize}&offset=${this.giphyOffset}&rating=${ratingValue}`;\r\n\r\n    this.toggleGettingData();\r\n\r\n    const data = await giphyRequest(url).catch( err => { console.log`Sorry we have problems ${err}`});\r\n\r\n    this.toggleGettingData();\r\n\r\n    this.giphyOffset += chunkSize;\r\n\r\n    return this.extractData(data.data);\r\n  }\r\n\r\n  extractData(data) {\r\n    return data.map(obj => {\r\n      const { title, images, import_datetime, source, images: { preview_gif: { width, height } }, rating } = obj;\r\n\r\n      return {\r\n        height,\r\n        width,\r\n        title,\r\n        images,\r\n        import_datetime,\r\n        source,\r\n        rating,\r\n      }\r\n    });\r\n  }\r\n\r\n  handleClick = (event) => {\r\n    const { searchData } = this.state;\r\n    const gifId = +event.target.getAttribute('data-id');\r\n\r\n\r\n    if (gifId) {\r\n      this.setState({ modalInfo: searchData[gifId] });\r\n    }\r\n  }\r\n\r\n  handleScroll = async (event) => {\r\n    event.persist();\r\n    const { searchRequest } = this.props;\r\n    const { searchData } = this.state;\r\n    const slider = event.target;\r\n    const scrHeight = document.documentElement.clientHeight;\r\n\r\n    if (slider.scrollHeight <= slider.scrollTop + scrHeight) {\r\n      const newData = await this.getData(searchRequest);\r\n      if (!newData) return;\r\n      this.setState({ searchData: [...searchData, ...newData] });\r\n    }\r\n  }\r\n\r\n  handleModalClose = () => {\r\n    this.setState({ modalInfo: null });\r\n  }\r\n\r\n  render() {\r\n    const { modalInfo, searchData, isContentOver, isGettingData } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {isGettingData && <Loader />}\r\n        <div\r\n          className=\"gif-container\"\r\n          onClick={this.handleClick}\r\n          onScroll={this.handleScroll}\r\n        >\r\n          <Masonry\r\n            className={'my-gallery-class'}\r\n            elementType={'ul'}\r\n            options={{ transitionDuration: 0 }}\r\n            disableImagesLoaded={false}\r\n            updateOnEachImageLoad={true}\r\n            imagesLoadedOptions={{ display: 'none' }}\r\n          >\r\n            {searchData.map((data, i) =>\r\n              <li key={key(data)} >\r\n                <GifCard data={data} id={i} />\r\n              </li>)\r\n            }\r\n          </Masonry>\r\n\r\n          {!!modalInfo &&\r\n            <GifModalWindow\r\n              open={!!modalInfo}\r\n              onClose={this.handleModalClose}\r\n              modalInfo={modalInfo}\r\n            />\r\n          }\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n","import Main from './Main';\r\n\r\nexport default Main;","import React from 'react';\r\nimport GifContainer from '../GifContainer';\r\nimport './Main.scss';\r\n\r\n\r\nexport default function Main({ searchRequest, maxCount, ratingValue }) {\r\n    return (\r\n        <main>\r\n            <GifContainer\r\n                searchRequest={searchRequest}\r\n                maxCount={maxCount}\r\n                ratingValue={ratingValue}\r\n                key={searchRequest + ratingValue + maxCount}\r\n            />\r\n        </main>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst limits = [10, 20, 50, 100, 400, 1000, Infinity];\r\n\r\nconst currencies = [\r\n  {\r\n    value: 'G',\r\n  },\r\n  {\r\n    value: 'PG',\r\n  },\r\n  {\r\n    value: 'PG-13',\r\n  },\r\n  {\r\n    value: 'R',\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  bar: {\r\n    background: '#071739',\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    \r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 500,\r\n    },\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    background: '#b9d5fd',\r\n  },\r\n  textField: {\r\n    margin: '8px',\r\n    borderColor: 'white',\r\n    width: '100px',\r\n  },\r\n}));\r\n\r\nexport default function HeaderUI({\r\n  maxCount,\r\n  handleMaxCountChange,\r\n  ratingValue,\r\n  handleRatingValueChange,\r\n  handleQuerryChange,\r\n}) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({ top: false });\r\n\r\n\r\n  const toggleDrawer = (open) => event => {\r\n    event.persist();\r\n\r\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) return;\r\n\r\n    setState({ top: open });\r\n  };\r\n\r\n\r\n  const fullList = () => (\r\n    <form className={classes.fullList} noValidate autoComplete=\"off\">\r\n    <TextField\r\n        id=\"outlined-select-currency\"\r\n        select\r\n        label=\"Download limit\"\r\n        className={classes.textField}\r\n        value={maxCount}\r\n        onChange={handleMaxCountChange}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      >\r\n        {limits.map(option => (\r\n          <MenuItem key={option} value={option}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n      <TextField\r\n        id=\"outlined-select-currency\"\r\n        select\r\n        label=\"Rating\"\r\n        className={classes.textField}\r\n        value={ratingValue}\r\n        onChange={handleRatingValueChange}\r\n        SelectProps={{\r\n          MenuProps: {\r\n            className: classes.menu,\r\n          },\r\n        }}\r\n        margin=\"normal\"\r\n        variant=\"outlined\"\r\n      >\r\n        {currencies.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.value}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" className={classes.bar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={toggleDrawer(true)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <SwipeableDrawer\r\n            anchor=\"top\"\r\n            open={state.top}\r\n            onClose={toggleDrawer(false)}\r\n            onOpen={toggleDrawer(true)}\r\n          >\r\n            {fullList('top')}\r\n          </SwipeableDrawer>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            QULIX GIPHY\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n              onChange={handleQuerryChange}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import HeaderUI from './HeaderUI';\r\n\r\nexport default HeaderUI;","import App from './App';\r\n\r\nexport default App;","import React from 'react';\r\nimport Main from '../Main';\r\nimport HeaderUI from '../HeaderUI';\r\nimport './App.scss';\r\n\r\nexport default class App extends React.Component {\r\n\r\n    state = {\r\n        searchRequest: '',\r\n        maxCount: 400,\r\n        ratingValue: 'G',\r\n    }\r\n\r\n    handleChange = (e, timer, prop) => {\r\n        e.persist();\r\n        clearTimeout(this[timer]);\r\n        this[timer] = setTimeout(() => {\r\n            this.setState({ [prop]: e.target.value });\r\n        }, 400);\r\n\r\n    }\r\n\r\n    handleQuerryChange = e => {\r\n        this.handleChange(e, 'querryTimer', 'searchRequest');\r\n    }\r\n\r\n    handleRatingValueChange = e => {\r\n        this.handleChange(e, 'ratingTimer', 'ratingValue');\r\n    }\r\n\r\n    handleMaxCountChange = e => {\r\n        this.handleChange(e, 'maxCountTimer', 'maxCount');\r\n    }\r\n\r\n    render() {\r\n        const { searchRequest, maxCount, ratingValue } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <HeaderUI \r\n                    maxCount={maxCount}\r\n                    ratingValue={ratingValue}\r\n                    handleQuerryChange={this.handleQuerryChange}\r\n                    handleMaxCountChange={this.handleMaxCountChange}\r\n                    handleRatingValueChange={this.handleRatingValueChange}\r\n                />\r\n\r\n                <Main\r\n                    searchRequest={searchRequest}\r\n                    maxCount={maxCount}\r\n                    ratingValue={ratingValue}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}